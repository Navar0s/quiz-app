# nginx/quiz.dev.conf

# Definiere Log-Format (innerhalb http, aber vor server ist ok)
#log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
#                    '$status $body_bytes_sent "$http_referer" '
#                    '"$http_user_agent" "$http_x_forwarded_for" '
#                    'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

# Erhöhe das Limit für die Request-Body-Größe (innerhalb http oder server)
#client_max_body_size 50m;

# Definiere Upstream für die DEV API
upstream backend_api_dev { # Neuer Name für den Upstream
    server api_dev:3001; # Zeigt auf den Service-Namen 'api_dev' und dessen internen Port
}

server {
    listen       80 default_server;
    listen       [::]:80 default_server;

    # server_name kann für Dev anders sein oder gleich bleiben, ist für localhost-Zugriff egal
    server_name  dev.nobbysquiz.org localhost_dev; # Beispiel

    access_log /dev/stdout combined;
    error_log stderr warn;

    location ^~ /api/ {
        proxy_pass         http://backend_api_dev/api/; # Verwende den neuen Upstream
        proxy_http_version 1.1;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout    60s;
        proxy_read_timeout    60s;
    }

    # Audio Dateien direkt servieren (spezifisch)
    # Anfragen an /audio/datei.mp3 suchen nach /var/www/audio/datei.mp3
    location /audio/ { # ^~ ist hier optional, da kein Fallback
        root /var/www; # Root ist das Verzeichnis, das /audio enthält (aus Volume-Mount)
        try_files $uri =404; # Suche die Datei unter <root>/<uri>. Wenn nicht da -> 404.

        # Optional: Caching-Header für statische Audiodateien
        expires 1M;
        add_header Cache-Control "public";
        # Optional: Weniger Logging für gefundene/nicht gefundene statische Dateien
        log_not_found off;
        access_log off; # Access Log für erfolgreiche Audio-Anfragen ausschalten
    }

    # Socket.IO Anfragen (spezifisch)
    location ^~ /socket.io/ {
        proxy_pass         http://backend_api_dev/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location = /robots.txt {
        # Für Dev vielleicht eine andere robots.txt oder Disallow all
        return 200 "User-agent: *\nDisallow: /\n";
        # alias /usr/share/nginx/html/robots.txt.dev;
        default_type text/plain;
    }

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
